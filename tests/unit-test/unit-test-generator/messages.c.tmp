0 !!"header.h"\\
1 #include
2 {\\
3 !!*aninstance)\\
4 m_
5 (
6 m_
7 init_
8 !!
9 void
10 );\\
11 &aninstance->
12 (
13 init_
14 );\\
15 ,
16 aninstance->
17 (
18 init_
19 {\\
20 !!*source)\\
21 m_
22 !!*dest,
23 m_
24 (
25 m_
26 copy_
27 !!
28 void
29 }\\
30 _list);\\
31 xmessagelist->
32 _messages(
33 init_
34 _messages));\\
35 (
36 (sizeof
37 malloc
38 _messages!!*)
39 (
40 _list=
41 xmessagelist->
42 {\\
43 *xmessagelist)
44 !!
45 XMessageList
46 (
47 void!!initialize_
48 }\\
49 );\\
50 ,
51 source->
52 ,
53 dest->
54 (
55 copy_
56 );\\
57 &source->
58 ,
59 &dest->
60 (
61 copy_
62 _messages!!*anarray
63 (
64 m_
65 void!!add_
66 }\\
67 ]
68 [
69 !!
70 ,
71 !!
72 !!
73 ,
74 &anarray->array[anarray->size];\\
75 =
76 aux
77 !!}\\
78 )));\\
79 m_
80 sizeof(
81 *
82 ((anarray->total_size)
83 !!*)realloc(anarray->array,
84 m_
85 (
86 =
87 !!!!anarray->array
88 !!!!anarray->total_size=anarray->total_size+ARRAY_BLOCK_SIZE;\\
89 !!!!{\\
90 !!if(anarray->size==anarray->total_size)\\
91 !!*aux;\\
92 m_
93 {\\
94 )\\
95 (
96 copy_
97 ,
98 ,
99 aux->
100 &
101 ,
102 )
103 &(aux->
104 );\\
105 !!result=1;\\
106 !!result;\\
107 !!int
108 {\\
109 )\\
110 !!*b
111 m_
112 !!*a,
113 m_
114 (
115 m_
116 equal_
117 !!
118 int
119 }\\
120 &dest->array[i],&source->array[i]);\\
121 (
122 m_
123 copy_
124 for(i=0;i<source->size;i++)\\
125 int!!i;\\
126 {\\
127 _messages!!*source)\\
128 _messages!!*dest,
129 _messages(
130 copy_
131 !!
132 void
133 }\\
134 anarray->size++;\\
135 );\\
136 ,&b->
137 &a->
138 (
139 equal_
140 &&
141 !!result=result
142 );\\
143 ,
144 b->
145 ,
146 a->
147 (
148 equal_
149 &&
150 !!result=result
151 \n",file);\\
152 %s
153 m_
154 !!
155 !!printf("reading
156 !!printf("%d",*index);\\
157 {\\
158 int!!*index)\\
159 char!!*file,
160 !!*aninstance,
161 m_
162 (
163 m_
164 read_xml_
165 !!
166 void
167 }\\
168 ;\\
169 !!free(aninstance->array)
170 {\\
171 _messages!!*aninstance)\\
172 _messages(
173 free_
174 !!
175 void
176 }\\
177 !!aninstance->index=0;\\
178 0;\\
179 =
180 !!aninstance->size
181 {\\
182 _messages!!*aninstance)\\
183 _messages(
184 reset_
185 !!
186 void
187 }\\
188 ));\\
189 m_
190 *)malloc(ARRAY_BLOCK_SIZE!!*sizeof(
191 m_
192 (
193 =
194 aninstance->array
195 ARRAY_BLOCK_SIZE;\\
196 =
197 aninstance->total_size
198 aninstance->index=0;\\
199 0;\\
200 =
201 aninstance->size
202 {\\
203 _messages!!*aninstance)\\
204 _messages(
205 init_
206 !!
207 void
208 }\\
209 (&aninstance[i]);\\
210 m_
211 !!init_
212 for(i=0;i<size;i++)\\
213 int!!i;\\
214 {\\
215 int!!size)\\
216 !!*aninstance,
217 m_
218 _static_messages(
219 m_
220 init_
221 !!
222 void
223 }\\
224 return!!result;\\
225 &a->array[i],&b->array[i]);\\
226 (
227 m_
228 result=result&&equal_
229 for(i=0;i<a->size;i++)\\
230 !!0;\\
231 !!return
232 if((a->size)!=(b->size))
233 result=1;\\
234 int!!i,result;\\
235 {\\
236 _messages!!*b)\\
237 _messages!!*a,
238 _messages(
239 equal_
240 !!
241 int
242 }\\
243 !!result;
244 return
245 !!*index=*index+1;\\
246 index);\\
247 ,
248 file,
249 ,
250 (aninstance->
251 read_xml_
252 index);\\
253 file,
254 ,
255 (&aninstance->
256 read_xml_
257 (aninstance
258 m_
259 !!!!add_
260 &aux,file,index);\\
261 (
262 m_
263 !!!!read_xml_
264 !!!!cond=0;\\
265 !!{\\
266 while((*index<len-1)&&(file[*index]!='}'))\\
267 !!cond=1;\\
268 printf("%c",file[*index]);\\
269 !!aux;\\
270 m_
271 !!!!*index=*index+1;\\
272 !!len=strlen(file);\\
273 !!int!!len,cond;\\
274 \n",file);\\
275 %s
276 __messages
277 !!
278 !!printf("reading
279 {\\
280 int!!*index)\\
281 char!!*file,
282 _messages!!*aninstance,
283 _messages(
284 read_xml_
285 !!
286 void
287 }\\
288 !!*index=*index+1;\\
289 aux.
290 ,
291 fprintf(file,"%c",'{');\\
292 {\\
293 FILE!!*file)\\
294 !!*aninstance,
295 m_
296 (
297 m_
298 print_xml_
299 !!
300 void
301 }\\
302 \n",file);\\
303 %s
304 __messages
305 !!
306 !!printf("read
307 !!!!*index=*index+1;\\
308 !!!!if(cond)
309 !!}\\
310 !!!!*index=*index+1;\\
311 );\\
312 );\\
313 file,
314 ,
315 (aninstance->
316 print_xml_
317 file);\\
318 ,
319 (&aninstance->
320 print_xml_
321 !!!!fprintf(file,",");\\
322 _messages!!*anarray,
323 _private(
324 _message
325 add_
326 !!
327 void
328 }\\
329 !!return!!result;\\
330 !!else!!result=NULL;\\
331 !!}\\
332 !!!!result=&messages->array[messages->index];\\
333 !!{\\
334 !!if(messages->index<messages->size)
335 !!!!messages->index++;
336 _list;\\
337 !!messages=current_messages->
338 !!*result;\\
339 !!m_
340 _messages!!*messages;\\
341 !!
342 {\\
343 ()\\
344 _message
345 !!*get_next_
346 m_
347 }\\
348 !!return!!result;\\
349 else!!result=NULL;\\
350 !!}\\
351 !!!!result=&messages->array[0];\\
352 !!!!messages->index=0;\\
353 !!{\\
354 !!if(messages->size>0)
355 _list;\\
356 !!messages=current_messages->
357 !!*result;\\
358 m_
359 !!
360 _messages!!*messages;\\
361 !!
362 {\\
363 ()\\
364 _message
365 !!*get_first_
366 m_
367 }\\
368 >\n");\\
369 fprintf(file,"%s","\n</
370 fprintf(file,"%c",'}');\\
371 !!}\\
372 !!!!!!fprintf(file,"%c",',');\\
373 !!!!if(i<aninstance->size-1)\\
374 (&aninstance->array[i],file);\\
375 m_
376 !!!!print_xml_
377 !!{\\
378 for(i=0;i<aninstance->size;i++)\\
379 fprintf(file,"%c",'{');\\
380 >\n");\\
381 fprintf(file,"%s","<
382 int!!i;\\
383 {\\
384 FILE!!*file)\\
385 _messages!!*aninstance,
386 _messages(
387 print_xml_
388 !!
389 void
390 }\\
391 fprintf(file,"%c",'}');\\
392 ]
393 [
394 !!
395 ,
396 !!
397 !!
398 ,
399 &anarray->array[anarray->size];\\
400 =
401 aux
402 !!}\\
403 )));\\
404 m_
405 sizeof(
406 *
407 ((anarray->total_size)
408 !!*)realloc(anarray->array,
409 m_
410 (
411 =
412 !!!!anarray->array
413 !!!!anarray->total_size=anarray->total_size+ARRAY_BLOCK_SIZE;\\
414 !!!!{\\
415 !!if(anarray->size==anarray->total_size)\\
416 !!*aux;\\
417 m_
418 {\\
419 )\\
420 ,
421 ,
422 aux->
423 _array(
424 copy_
425 &
426 ,
427 )
428 (&(aux->
429 copy_
430 );\\
431 (
432 _message
433 add_
434 !!
435 void
436 }\\
437 anarray->size++;\\
438 ]
439 [
440 !!
441 ,
442 !!
443 !!
444 ,
445 list,
446 _message_private(
447 add_
448 _list;\\
449 list=current_messages->
450 _messages!!*list;\\
451 {\\
452 )\\
453 ,
454 }\\
455 );\\
456 {\\
457 !!*xmessagelist)\\
458 void!!initialize_xmessagelist(XMessageList
459 _list);\\
460 xmessagelist->
461 _messages(
462 init_
463 _messages));\\
464 (
465 (sizeof
466 malloc
467 _messages!!*)
468 (
469 _list=
470 xmessagelist->
471 {\\
472 !!*xmessagelist)\\
473 void!!reset_xmessagelist(XMessageList
474 }\\
475 _list);\\
476 xmessagelist->
477 _messages(
478 reset_
479 {\\
480 !!*xmessagelist)\\
481 void!!free_xmessagelist(XMessageList
482 }\\
483 _list);\\
484 xmessagelist->
485 _messages(
486 free_
487 !!{\\
488 !!if(file)\\
489 !!file=fopen(nome_file,"w");\\
490 !!FILE!!*file;\\
491 {\\
492 char!!*nome_file)\\
493 !!*xmessagelist,
494 void!!print_xmessagelist(XMessageList
495 }\\
496 file);\\
497 _list,
498 _messages(xmessagelist->
499 _list->size>0)!!print_xml_
500 !!!!if(xmessagelist->
501 }\\
502 fclose(file);
503 !!}\\
