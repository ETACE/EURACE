<?xml version="1.0" encoding="ISO-8859-1"?>

<xmachine_agent_model>
<name>Financial Market Model</name>
<author>Sander van der Hoog</author>
<date>010607, 050308</date>

<!--************************* NOTES ***************************************-->
<!--This is the main description file for EWA learning in the financial market model-->
<!-- Agents involved: Household, FinancialAgent-->
<!--13/11/07 Adding structures to the model.xml-->

<!--***************** Environment values and functions **********************-->
<environment>
<functions>
<file>Household_ewa_functions.c</file>
<file>FinancialAgent_ewa_functions.c</file>
<file>mylibraryfunctions.c</file>
<file>some_new_functions.c</file>
</functions>
<!--Auxiliary structs--><!--Structures-->


<!--***************************** EWA Datastructures *****************************-->
<datatype>
<!--***************************** Struct for the EWA Parameters *****************************--><name>EWAParameterStruct</name><var><type>double</type><name>EWA_rho</name></var><var><type>double</type><name>EWA_phi</name></var><var><type>double</type><name>EWA_delta</name></var><var><type>double</type><name>EWA_beta</name></var>
	</datatype>

	<datatype>
<!--***************************** Struct for the PublicClassifierRule *****************************--><name>PublicClassifierRule</name>
<desc>Datatype for the central classifier system. The system is a dynamic array of PublicClassifierRules !Subject to change!</desc>
	<var><!--id for the rule-->
	<type>int</type><name>id</name>
	</var>
<!--------------------------------------- Rule measures --------------------------------------->
<var><!--This is the user counter for each rule-->
<type>int</type><name>counter</name>
</var>
<var><!--This is the performance for each rule-->
<type>double</type><name>performance</name>
</var>
<var><!--This is the average performance for each rule-->
<type>double</type><name>avg_performance</name>
</var>
<!--------------------------------------- Rule details --------------------------------------->
<!--Here are parameters for the execution function for each rule. We allow a rule to have 10 parameters that are all doubles.-->
<var><type>double</type>
<name>parameters[10]</name>
</var>
</datatype>
<datatype>
<!--***************************** Struct for the Private Classifier Rule *****************************--><name>PrivateClassifierRule</name>
<desc>Datatype for the private classifier system inside each agent. The system is a dynamic array of PrivateClassifierRule.  !Subject to change!</desc>
	<var><!--id for each rule-->
	<type>int</type><name>id</name>
	</var>
<!--------------------------------------- Rule measures --------------------------------------->
<var><!--Agent's performance of current_rule--><type>double</type><name>my_performance</name>
</var>
<var><!--Agent average performance-->
<type>double</type><name>avg_performance</name>
</var>
<var><!--Agent attractions-->
<type>double</type><name>attraction</name></var>
<var><!--Agent choice probabilities-->
<type>double</type><name>choiceprob</name></var>
<!--------------------------------------- Rule details --------------------------------------->
<!--Here are parameters for the execution function for each rule. We allow a rule to have 10 parameters that are all doubles.-->
<var><type>double</type>
<name>parameters[10]</name>
</var>
</datatype>

<datatype>
<!--***************************** Struct for the Simple Public Classifier System *****************************-->
<name>SimplePublicClassifierSystem</name>
<desc>Datatype for the central classifier system. !Subject to change!</desc>
<!-------------------Metadata for the rule system---------------------->
	<var>
		<!--Total nr of rules-->
		<type>int</type>
		<name>nr_rules</name>
	</var>
<!-------------------The rule system---------------------->
	<var><!--Static array of 100 public classifier rules: this array contains rules of only one type-->
		<type>PublicClassifierRule</type>
		<name>ruletable[100]</name>
	</var>
</datatype>

<datatype>
<!--***************************** Struct for the Simple Private Classifier System *****************************-->
<name>SimplePrivateClassifierSystem</name>
<desc>Datatype for the private classifier system inside each agent.  !Subject to change!</desc>
<!-------------------Metadata for the rule system---------------------->
	<var>
		<!--Total nr of rules-->
		<type>int</type>
		<name>nr_rules</name>
	</var>
<!-------------------Metadata for the agent---------------------->
	<var>
	<!--Experience variable for EWA learning-->
	<type>double</type><name>experience</name>
	</var>
	
	<var>
	<!--Current rule in use by the agent-->
	<type>int</type>
	<name>current_rule</name>
	</var>
<!-------------------The rule system---------------------->
	<var>
	<!--Static array of 100 private classifier rules: this array contains rules of only one type-->
		<type>PrivateClassifierRule</type>
		<name>ruletable[100]</name>
	</var>
</datatype>

<datatype>
<!--***************************** Struct for the Public Classifier System *****************************--><name>ComplexPublicClassifierSystem</name>
<desc>Datatype for the central classifier system. !Subject to change!</desc>
<!-------------------Metadata for the rule system---------------------->
	<var>
	<!--Nr of subpopulations-->
	<type>int</type>
	<name>nr_types</name>
	</var>
	<var>
		<!--Nr_rules_per_type may differ for each type; size of subpopulations-->
		<type>int_array</type>
		<name>nr_rules_per_type</name>
	</var>
	<var>
		<!--Total nr of rules-->
		<type>int</type>
		<name>nr_rules</name>
	</var><!-------------------The rule system---------------------->
	<var><!--Static array of 100 public classifier rules: this array contains rules of heterogenous types-->
		<type>PublicClassifierRule</type>
		<name>ruletable[100]</name>
	</var>
</datatype>

<datatype>
<!--***************************** Struct for the Private Classifier System *****************************-->
<name>ComplexPrivateClassifierSystem</name>
<desc>Datatype for the private classifier system inside each agent.  !Subject to change!</desc>
<!-------------------Metadata for the rule system---------------------->
	<var>
	<!--Nr of subpopulations--><type>int</type>
	<name>nr_types</name>
	</var>
	<var>
		<!--Nr_rules_per_type may differ for each type; size of subpopulations-->
		<type>int_array</type>
		<name>nr_rules_per_type</name>
	</var>
	<var>
		<!--Total nr of rules-->
		<type>int</type>
		<name>nr_rules</name>
	</var>
<!-------------------Metadata for the agent---------------------->
	<var><!--Experience variable for EWA learning-->
	<type>double</type><name>experience</name>
	</var><var><!--Current rule in use by the agent-->
	<type>int</type><name>current_rule</name>
	</var>
<!-------------------The rule system---------------------->
	<var>
	<!--Static array of 100 private classifier rules: this array contains rules of heterogenous types-->
		<type>PrivateClassifierRule</type>
		<name>ruletable[100]</name>
	</var>
</datatype>

</environment>

<!--********************* X-machine Agent - Household ****************************-->
<xmachine>
<name>Household</name>
<!----------------- Variables-------------------------------------------------->
<!-- All variables used by household are declared here to allocate them in memory -->

<memory>
<var><type>int</type><name>id</name></var>
	<var>
		<type>EWAParameterStruct</type><name>EWA_parameters</name>
		</var>
	<var><type>SimplePrivateClassifierSystem</type><name>classifiersystem</name></var>
<var><type>double</type><name>posx</name></var>
<var><type>double</type><name>posy</name></var>
</memory>
<!----------------- Defining functions ---------------------------------------->
<functions>
<!---Role: Financial Management Role-->
<!---Role: Consumption Market Role-->
<!---Role: Asset Market Role-->
<!---Role: Credit Market Role-->
<!--EWA Functions-->
<function>
	<name>Every_period</name>
	<depends>
		<name>Household_reset_private_classifiersystem</name>
		<type>internal</type>
	</depends>
</function>
<function>
	<name>Household_send_rule_performance</name>
	<depends>
			<name>Every_period</name>
			<type>internal</type>
	</depends>
</function>

<function>
	<name>Household_read_all_performances</name>
	<depends>
		<name>FinancialAgent_send_all_performances</name>
		<type>new_performances</type>
	</depends>
</function>

<function>
	<name>Household_select_rule</name>
	<depends>
		<name>Household_read_all_performances</name>
		<type>internal</type>
	</depends>
</function>

<function>
	<name>Household_apply_rule</name><depends>
		<name>Household_select_rule</name>
		<type>internal</type>
	</depends>
</function>

<function>
	<name>Household_read_and_update_rule_details</name>
	<depends>
		<name>FinancialAgent_send_rule_details</name>
		<type>rule_details</type>
	</depends>
</function>

<function><name>Household_reset_private_classifiersystem</name>
	<depends>
		<name>Household_read_and_update_rule_details</name>
		<type>internal</type></depends>
</function>

</functions>
</xmachine>
<!--*********************** End of Agent - Household *****************************-->

<!--********************* X-machine Agent - FinancialAgent ****************************-->
<xmachine>
<name>FinancialAgent</name>
<!----------------- Variables-------------------------------------------------->
<!-- All variables used by FinancialAgent are declared here to allocate them in memory -->
<memory>
<var>
	<type>int</type>
	<name>day_of_month_to_act</name>
</var>
<var>
	<type>int</type>
	<name>day</name>
</var>
<var>
	<type>int</type>
	<name>month</name>
</var>
<var><type>SimplePublicClassifierSystem</type>	<name>classifiersystem</name></var>
<var><type>double</type><name>posx</name></var>
<var><type>double</type><name>posy</name></var>
</memory>
<!----------------- Defining functions ---------------------------------------->
<functions>
<!--EWA Functions-->
<function>
		<!--Resets performance and avgperformance for all rules. Daily. -- No longer applicable, Sander 23 Dec. 2007-->
		<name>FinancialAgent_daily_reset_public_classifiersystem</name>
</function>
<function><name>FinancialAgent_read_rule_performance_and_update_classifiersystem</name>
<depends><name>Household_send_rule_performance</name><type>rule_performance</type></depends>
</function>

<function><name>FinancialAgent_send_all_performances</name>
<depends><name>FinancialAgent_read_rule_performance_and_update_classifiersystem</name><type>internal</type></depends>
</function>
	<function>
		<name>Every_100_periods</name></function>
	<function><name>FinancialAgent_apply_GA</name>
	<depends>
		<name>Every_100_periods</name>
		<type>internal</type></depends></function><function><name>FinancialAgent_update_rule_details</name><!--Date-event triggered: every 100 days run the GA-->
<depends><name>FinancialAgent_apply_GA</name><type>internal</type></depends>
</function>
	<function>
		<name>FinancialAgent_reset_public_classifiersystem</name>
		<depends>
			<name>FinancialAgent_update_rule_details</name>
			<type>internal</type></depends></function>
	
<function><name>FinancialAgent_send_rule_details</name>
<depends><name>FinancialAgent_update_rule_details</name><type>internal</type></depends>
</function>

</functions>
</xmachine><!--*********************** End of Agent - FinancialAgent ****************************-->


<!--******** Messages being posted by the agents to communicate *************-->
<messages>
<!--EWA messages-->

<message>
<name>rule_performance</name>
<note>Message sent by household to tell the FA agent of the rule performance</note>
<var><type>int</type><name>rule_id</name></var>
<var><type>double</type><name>rule_performance</name></var>
<var><type>double</type><name>range</name></var>
<var><type>double</type><name>x</name></var>
<var><type>double</type><name>y</name></var>
<var><type>double</type><name>z</name></var>
</message>

<message>
<name>new_performances</name>
<note>Message sent by FA and read by all households. There will be a single message per rule.</note>
<var><type>double</type><name>avg_performance</name></var>
	<var>
		<type>int</type><name>rule_id</name>
		</var>
	<var><type>double</type><name>range</name></var>
<var><type>double</type><name>x</name></var>
<var><type>double</type><name>y</name></var>
<var><type>double</type><name>z</name></var>
</message>

<message>
<name>rule_details</name>
<note>FA communicates new rule details. There will be a single message per rule, that contains the static array parameters[10] with the parameters values for that rule.</note>
	<var>
		<type>int</type><name>rule_id</name>
		</var>
	<var><type>double</type><name>parameters[10]</name></var>
	<var><type>double</type><name>range</name></var>
<var><type>double</type><name>x</name></var>
<var><type>double</type><name>y</name></var>
<var><type>double</type><name>z</name></var>
</message>

</messages>
<!--********************** End of Messages **********************************-->

</xmachine_agent_model>
