<?xml version="1.0"?>
<!DOCTYPE xmodel SYSTEM "http://eurace.cs.bilgi.edu.tr/XMML.dtd">
<xmodel version="2">
  	<!--************************* NOTES ***************************************-->
	<!--This is the main description file for EWA learning in the financial market model-->
	<!-- Agents involved: Household, FinancialAgent-->
	
  <name>Financial Market Model - EWA learning module</name>
  <version>3</version>
  <description>Author: Sander van der Hoog, 01/06/2007, 05/03/2008, 22/05/2008, Converted from old XMML 1.0</description>

  <models>
  </models>
  
  <!--***************** Environment values and functions **********************-->
  <environment>
    <constants>
	<variable><type>int</type><name>nr_params</name><description>10, Number of parameters in a portfolio rule.</description></variable>
	<variable><type>int</type><name>print_debug</name><description>0 or 1, Boolean for debugging print statements.</description></variable>
    </constants>
    
    <functionFiles>
      <file>Household_ewa_functions.c</file>
      <file>FinancialAgent_ewa_functions.c</file>
      <file>FinancialAgent_aux_functions.c</file>
      <file>some_new_functions.c</file>
    </functionFiles>
    
 
	<timeUnits>
	
	<timeUnit>
	 <name>daily</name>
	 <unit>iteration</unit>
	 <period>1</period>
	</timeUnit>
	
	<timeUnit>
	 <name>weekly</name>
	 <unit>daily</unit>
	 <period>5</period>
	</timeUnit>
	
	<timeUnit>
	 <name>monthly</name>
	 <unit>weekly</unit>
	 <period>4</period>
	</timeUnit>
	
	<timeUnit>
	 <name>quarterly</name>
	 <unit>monthly</unit>
	 <period>3</period>
	</timeUnit>
	
	<timeUnit>
	 <name>yearly</name>
	 <unit>monthly</unit>
	 <period>12</period>
	</timeUnit>
	
	</timeUnits>
    
	<!--***************************** EWA Datastructures *****************************-->  
    <dataTypes>
    <dataType>
	<!--***************************** Struct for the EWA Parameters *****************************-->
	<name>EWAParameterStruct</name>
	<description>Struct for the EWA Parameters</description>
	<variables>
		<variable>
		<type>double</type>
		<name>EWA_rho</name>
		<description></description>
		</variable>
		<variable>
		<type>double</type>
		<name>EWA_phi</name>
		<description></description>
		</variable>
		<variable>
		<type>double</type>
		<name>EWA_delta</name>
		<description></description>
		</variable>
		<variable>
		<type>double</type>
		<name>EWA_beta</name>
		<description></description>
		</variable>
	</variables>
	</dataType>
	<!--***************************** GA Datastructure *****************************-->
	<dataType>
	<!--***************************** Struct for the GA Parameters *****************************-->
	<name>GAParameterStruct</name>
	<description>Struct for the GA Parameters</description>
	<variables>
		<variable>
		<type>double</type>
		<name>prob_cross</name>
		<description>Crossover probability</description>
		</variable>
		<variable>
		<type>double</type>
		<name>prob_mut</name>
		<description>Mutation probability</description>
		</variable>
		<variable>
		<type>int</type>
		<name>string_size</name>
		<description></description>
		</variable>
		<variable>
		<type>int</type>
		<name>pop_size</name>
		<description>Size of the rule population</description>
		</variable>
		<variable>
		<type>double</type>
		<name>reproduction_proportion</name>
		<description>Proportion of population that reproduces</description>
		</variable>
		<variable>
		<type>int</type>
		<name>single_point_cross_over</name>
		<description>Dummy for single-point crossover operator (1: use single-point; 0: use 2-point cross-over)</description>
		</variable>
		<variable>
		<type>int</type>
		<name>election</name>
		<description>Dummy for election operator</description>
		</variable>
		<variable>
		<type>double</type>
		<name>stepsize[10]</name>
		<description>Mutation stepsize for each parameter</description>
		</variable>
		<variable>
		<type>double</type>
		<name>delta_min</name>
		<description>Mutation lower range, delta_min*stepsize[i]</description>
		</variable>
		<variable>
		<type>double</type>
		<name>delta_max</name>
		<description>Mutation upper range, delta_max*stepsize[i]</description>
		</variable>
		<variable>
		<type>double</type>
		<name>min_values[10]</name>
		<description>Minimum values for each parameter</description>
		</variable>
		<variable>
		<type>double</type>
		<name>max_values[10]</name>
		<description>Maximum values for each parameter</description>
		</variable>
	</variables>
	</dataType>
	
	<dataType>
	<!--***************************** Struct for the PublicClassifierRule *****************************-->
	<name>PublicClassifierRule</name>
	<description>Datatype for the central classifier system. The system is a dynamic array of PublicClassifierRules !Subject to change!</description>
	<variables>
		<variable>
		<type>int</type><name>id</name>
		<description>id for the rule</description>
		</variable>
		<variable>
		<type>int</type><name>counter</name>
		<description>User counter for each rule</description>
		</variable>
		<variable>
		<type>double</type><name>performance</name>
		<description>Total performance for each rule</description>
		</variable>
		<variable>
		<type>double</type><name>avg_performance</name>
		<description>Average performance for each rule (=total performance/counter)</description>
		</variable>
		<variable>
		<type>double</type><name>selection_prob</name>
		<description>Selection probability for the rule</description>
		</variable>
		<variable><type>double</type>
		<name>parameters[10]</name>
		<description>Parameter values encoding the rule</description>
		</variable>
	</variables>
	</dataType>
	<dataType>
	<!--***************************** Struct for the Private Classifier Rule *****************************-->
	<name>PrivateClassifierRule</name>
	<description>Datatype for the private classifier system inside each agent. The system is a dynamic array of PrivateClassifierRule.  !Subject to change!</description>
	<variables>
		<variable>
		<type>int</type><name>id</name>
		<description>id for each rule</description>
		</variable>
		<variable>
		<type>double</type><name>my_performance</name>
		<description>Agent performance with current_rule (0.0 if this rule is not currently used)</description>
		</variable>
		<variable>
		<type>double</type><name>avg_performance</name>
		<description>Average performance for this rule across population (copied from Central CS)</description>
		</variable>
		<variable>
		<type>double</type><name>attraction</name>
		<description>Agent attractions</description>
		</variable>
		<variable>
		<type>double</type><name>choiceprob</name>
		<description>Agent choice probabilities</description>
		</variable>
		<variable><type>double</type>
		<name>parameters[10]</name>
		<description>Parameter values encoding the rule</description>
		</variable>
	</variables>
	</dataType>
	
	<dataType>
	<!--***************************** Struct for the Simple Public Classifier System *****************************-->
	<name>SimplePublicClassifierSystem</name>
	<description>Datatype for the central classifier system. Simple version allows for rules of the same strategy type (all rules use the same function). !Subject to change!</description>
	<variables>
		<variable>
			<type>int</type>
			<name>nr_rules</name>
			<description>Total number of rules in the rule set</description>
		</variable>
	
		<variable>
			<type>PublicClassifierRule</type>
			<name>ruletable[100]</name>
			<description>Static array of 100 public classifier rules of homogeneous type</description>
		</variable>
	</variables>
	</dataType>

	<dataType>
	<!--***************************** Struct for the Simple Private Classifier System *****************************-->
	<name>SimplePrivateClassifierSystem</name>
	<description>Datatype for the private classifier system inside each agent. Simple version allows for rules of the same strategy type (all rules use the same function). !Subject to change!</description>
	<variables>
		<variable>
			<type>int</type>
			<name>nr_rules</name>
			<description>Total number of rules in the rule set</description>
		</variable>
	
		<variable>
		<type>double</type><name>experience</name>
		<description>Experience variable for EWA learning</description>
		</variable>
		
		<variable>
		<type>int</type>
		<name>current_rule</name>
		<description>Current rule in use by the agent</description>
		</variable>
	
		<variable>
			<type>PrivateClassifierRule</type>
			<name>ruletable[100]</name>
			<description>Static array of 100 private classifier rules of homogeneous type</description>
		</variable>
	</variables>
	</dataType>
	
	<dataType>
	<!--***************************** Struct for the Complex Public Classifier System *****************************-->
	<name>ComplexPublicClassifierSystem</name>
	<description>Datatype for the central classifier system. This complex version allows for heterogeneous rule sets. !Subject to change!</description>
	<variables>
		<variable>
			<type>int</type>
			<name>nr_types</name>
			<description>Number of subpopulations (different types of rules)</description>
		</variable>
		<variable>
			<type>int_array</type>
			<name>nr_rules_per_type</name>
			<description>Nr_rules_per_type may differ per type: size of subpopulations</description>
		</variable>
		<variable>
			<type>int</type>
			<name>nr_rules</name>
			<description>Total number of rules in the rule set</description>
		</variable>
	
		<variable>
			<type>PublicClassifierRule</type>
			<name>ruletable[100]</name>
			<description>Static array of 100 public classifier rules of heterogenous type</description>
		</variable>
	</variables>
	</dataType>
    </dataTypes>
  </environment>

  <agents>
	<!--********************* X-machine Agent - Household ****************************-->
    <xagent>
      <name>Household</name>
      <description></description>
      <memory>
<!--      	<variable><type>int</type><name>id</name><description></description></variable>-->
<!--		<variable><type>int</type><name>day_of_month_to_act</name><description></description></variable>-->
      
        <variable>
          <type>EWAParameterStruct</type>
          <name>EWA_parameters</name>
          <description></description>
        </variable>
        <variable>
          <type>SimplePrivateClassifierSystem</type>
          <name>private_classifiersystem</name>
          <description></description>
        </variable>
      </memory>
      <roles></roles>
      <functions>

        <!-- Idle bypassing the Initialization phase -->
 	 	<function>
		  <name>idle</name>
		  <description>Idle bypassing Initialization phase</description>
		  <currentState>Start_Household_EWA_Learning</currentState>
		  <nextState>Start_GA</nextState>
          <condition>
          	<not><time><period>iteration</period><phase>1</phase></time></not>
          </condition>
		</function>
        		
       	<!-- Initialization phase -->      
         <function>
          <name>Household_initialize_rule_details</name>
          <description></description>
          <currentState>Start_Household_EWA_Learning</currentState>
          <nextState>001</nextState>
          <condition><time><period>iteration</period><phase>1</phase></time></condition>
          <inputs>
          <input>
          	<messageName>initial_rule_details</messageName>
          </input>
          </inputs>
          <outputs></outputs>
        </function>
         <function>
          <name>Household_portfolio_strategy_interface</name>
          <description></description>
          <currentState>001</currentState>
          <nextState>Start_GA</nextState>
        </function>
              
      	<!-- Idle bypassing the GA -->
 	 	<function>
		  <name>idle</name>
		  <description>Idle bypassing the GA</description>
		  <currentState>Start_GA</currentState>
		  <nextState>End_GA</nextState>
          <condition>
          		<lhs>
          			<not><time><period>yearly</period><phase>1</phase></time></not>
          	  	</lhs>
	          		<op>OR</op>
	          	<rhs>
		          	<time><period>iteration</period><phase>1</phase></time>
	          	</rhs>
          </condition>
		</function>
      
        <function>
          <name>Household_print_private_classifiersystem</name>
          <description></description>
          <currentState>Start_GA</currentState>
          <nextState>01</nextState>
          <condition>
	          <lhs>
		          <time><period>yearly</period><phase>1</phase></time>
	          </lhs>
	          	 <op>AND</op>
	          <rhs>
		          <not><time><period>iteration</period><phase>1</phase></time></not>
	          </rhs>
          </condition>
          <inputs></inputs>
          <outputs></outputs>
        </function>
        <function>
          <name>Household_reset_private_classifiersystem</name>
          <description></description>
          <currentState>01</currentState>
          <nextState>02</nextState>
          <inputs></inputs>
          <outputs></outputs>
        </function>
          <function>
          <name>Household_read_and_update_rule_details</name>
          <description></description>
          <currentState>02</currentState>
          <nextState>End_GA</nextState>
          <inputs>
          <input>
          	<messageName>rule_details</messageName>
          </input>
          </inputs>
          <outputs></outputs>
        </function>
        
      	<!-- Idle bypassing the EWA -->
 	 	<function>
		  <name>idle</name>
		  <description>Idle bypassing the EWA</description>
		  <currentState>End_GA</currentState>
		  <nextState>End_Household_EWA_Learning</nextState>
          <condition>
              	<lhs>
          			<not><time><period>monthly</period><phase>a.day_of_month_to_act</phase></time></not>
    			</lhs>
              		<op>OR</op>
	          	<rhs>
		          	<time><period>iteration</period><phase>1</phase></time>
	          	</rhs>
          </condition>
		</function>
        <function>
          <name>Household_send_rule_performance</name>
          <description></description>
          <currentState>End_GA</currentState>
          <nextState>03</nextState>
          <condition>
	          <lhs>
		          <time><period>monthly</period><phase>a.day_of_month_to_act</phase></time>
	          </lhs>
	          	<op>AND</op>
	          <rhs>
		          <not><time><period>iteration</period><phase>1</phase></time></not>
	          </rhs>
          </condition>
          <inputs></inputs>
          <outputs>
          <output>
          	<messageName>rule_performance</messageName>
          </output>
          </outputs>
        </function>
        <function>
          <name>Household_read_all_performances</name>
          <description></description>
          <currentState>03</currentState>
          <nextState>04</nextState>
          <inputs>
          <input>
          	<messageName>new_performances</messageName>
          </input>
          </inputs>
          <outputs></outputs>
        </function>
        <function>
          <name>Household_select_rule</name>
          <description></description>
          <currentState>04</currentState>
          <nextState>05</nextState>
          <inputs></inputs>
          <outputs></outputs>
        </function>
        
        <function>
          <name>Household_portfolio_strategy_interface</name>
          <description></description>
          <currentState>05</currentState>
          <nextState>End_Household_EWA_Learning</nextState>
          <inputs></inputs>
          <outputs></outputs>
        </function>
        
      </functions>
    </xagent>
    <!--*********************** End of Agent - Household *****************************-->
    
    <!--********************* X-machine Agent - FinancialAgent ****************************-->
    <xagent>
      <name>FinancialAgent</name>
      <description></description>
      <memory>
<!--        <variable><type>int</type><name>id</name><description></description></variable>-->
      
        <variable>
          <type>SimplePublicClassifierSystem</type>
          <name>public_classifiersystem</name>
          <description></description>
        </variable>
        <variable>
          <type>GAParameterStruct</type>
          <name>GA_parameters</name>
          <description></description>
        </variable>
        <variable>
          <type>EWAParameterStruct</type>
          <name>EWA_parameters</name>
          <description></description>
        </variable>
      </memory>
      <roles></roles>
      <functions>

        <!-- Idle bypassing the Initialization phase -->
 	 	<function>
		  <name>idle</name>
		  <description>Idle bypassing Initialization phase</description>
		  <currentState>Start_FinancialAgent</currentState>
		  <nextState>Start_GA</nextState>
          <condition>
          	<not><time><period>iteration</period><phase>1</phase></time></not>
          </condition>
		</function>
      
	    <!-- Initialisation phase of FA -->
 	 	<function>
		  <name>FinancialAgent_initialize_rule_details</name>
		  <description></description>
		  <currentState>Start_FinancialAgent</currentState>
		  <nextState>Start_GA</nextState>
          <condition><time><period>iteration</period><phase>1</phase></time></condition>
          <output>
          	<messageName>initial_rule_details</messageName>
          </output>
	    </function>
      
	    <!-- Idle bypassing the GA -->
 	 	<function>
		  <name>idle</name>
		  <description>Idle bypassing the GA</description>
		  <currentState>Start_GA</currentState>
		  <nextState>End_GA</nextState>
          <condition>
          	  <lhs>
		          <not><time><period>yearly</period><phase>1</phase></time></not>
	          </lhs>
	          		<op>OR</op>
	          <rhs>
		          <time><period>iteration</period><phase>1</phase></time>
	          </rhs>          
          </condition>
	    </function>
		  
        <function>
          <name>FinancialAgent_apply_GA</name>
          <description></description>
          <currentState>Start_GA</currentState>
          <nextState>01</nextState>
          <condition>
	          <lhs>
		          <time><period>yearly</period><phase>1</phase></time>
	          </lhs>
	          		<op>AND</op>
	          <rhs>
		          <not><time><period>iteration</period><phase>1</phase></time></not>
	          </rhs>
          </condition>
          <inputs></inputs>
          <outputs></outputs>
        </function>
        <function>
          <name>FinancialAgent_send_rule_details</name>
          <description></description>
          <currentState>01</currentState>
          <nextState>02</nextState>
          <inputs></inputs>
          <outputs>
          <output>
          	<messageName>rule_details</messageName>
          </output>
          </outputs>
        </function>
        <function>
          <name>FinancialAgent_print_public_classifiersystem</name>
          <description></description>
          <currentState>02</currentState>
          <nextState>03</nextState>
          <inputs></inputs>
          <outputs>
          </outputs>
        </function>
        <function>
          <name>FinancialAgent_reset_public_classifiersystem</name>
          <description>Resetting user counter, performance sum, avg_performance</description>
          <currentState>03</currentState>
          <nextState>End_GA</nextState>
          <inputs></inputs>
          <outputs></outputs>
        </function>
        <function>
          <name>FinancialAgent_read_rule_performance_and_update_classifiersystem</name>
          <description></description>
          <currentState>End_GA</currentState>
          <nextState>04</nextState>
          <inputs>
          <input>
          	<messageName>rule_performance</messageName>
          </input>
          </inputs>
          <outputs></outputs>
        </function>
        <function>
          <name>FinancialAgent_send_all_performances</name>
          <description></description>
          <currentState>04</currentState>
          <nextState>end_FinancialAgent</nextState>
          <inputs></inputs>
          <outputs>
          <output>
          	<messageName>new_performances</messageName>
          </output>
          </outputs>
        </function>
      </functions>
    </xagent>
    <!--*********************** End of Agent - FinancialAgent ****************************-->
  </agents>
  <contexts></contexts>
  <messages>
    <message>
      <name>rule_performance</name>
      <description></description>
      <variables>
        <variable>
          <type>int</type>
          <name>rule_id</name>
          <description></description>
        </variable>
        <variable>
          <type>double</type>
          <name>rule_performance</name>
          <description></description>
        </variable>
      </variables>
    </message>
    <message>
      <name>new_performances</name>
      <description></description>
      <variables>
        <variable>
          <type>int</type>
          <name>rule_id</name>
          <description></description>
        </variable>
        <variable>
          <type>double</type>
          <name>avg_performance</name>
          <description></description>
        </variable>
      </variables>
    </message>
    <message>
      <name>initial_rule_details</name>
      <description></description>
      <variables>
        <variable>
          <type>int</type>
          <name>rule_id</name>
          <description></description>
        </variable>
        <variable>
          <type>double</type>
          <name>parameters[10]</name>
          <description></description>
        </variable>
      </variables>
    </message>
    <message>
      <name>rule_details</name>
      <description></description>
      <variables>
        <variable>
          <type>int</type>
          <name>rule_id</name>
          <description></description>
        </variable>
        <variable>
          <type>double</type>
          <name>parameters[10]</name>
          <description></description>
        </variable>
      </variables>
    </message>
  </messages>
</xmodel>