<!DOCTYPE xmodel SYSTEM "http://eurace.cs.bilgi.edu.tr/XMML.dtd">
<xmodel version="2" >
 <name>Financial Market Model - EWA learning module</name>
 <version>4</version>
 <description>Author: Sander van der Hoog, 01/06/2007, 05/03/2008, 22/05/2008, 03/12/2008.&#xd;&#xd;&#xd;&#xd;
Converted from old XMML 1.0&#xd;&#xd;&#xd;&#xd;
Converted from XMML 2.0 to XMME v.1.9.4&#xd;&#xd;&#xd;&#xd;
</description>
 <models/>
 <environment>
  <constants>
   <variable>
    <type>int</type>
    <name>nr_params</name>
    <description>10, Number of parameters in a portfolio rule.</description>
   </variable>
   <variable>
    <type>int</type>
    <name>print_debug</name>
    <description>0 or 1, Boolean for debugging print statements.</description>
   </variable>
   <variable>
    <type>int</type>
    <name>print_log</name>
    <description>0 or 1, A flag to print logging output to terminal or to file.</description>
   </variable>
   <variable>
    <type>int</type>
    <name>switch_ewa_learning</name>
    <description>Switch to turn on/off EWA learning.</description>
   </variable>
  </constants>
  <functionFiles>
   <file>Household_ewa_functions.c</file>
   <file>FinancialAgent_ewa_functions.c</file>
   <file>FinancialAgent_aux_functions.c</file>
   <file>some_new_functions.c</file>
  </functionFiles>
  <timeUnits>
   <timeUnit>
    <name>daily</name>
    <unit>iteration</unit>
    <period>1</period>
   </timeUnit>
   <timeUnit>
    <name>weekly</name>
    <unit>daily</unit>
    <period>5</period>
   </timeUnit>
   <timeUnit>
    <name>monthly</name>
    <unit>weekly</unit>
    <period>4</period>
   </timeUnit>
   <timeUnit>
    <name>quarterly</name>
    <unit>monthly</unit>
    <period>3</period>
   </timeUnit>
   <timeUnit>
    <name>yearly</name>
    <unit>monthly</unit>
    <period>12</period>
   </timeUnit>
   <timeUnit>
    <name>millionyearly</name>
    <unit>yearly</unit>
    <period>1000000</period>
   </timeUnit>
  </timeUnits>
  <dataTypes>
   <dataType>
    <name>EWAParameterStruct</name>
    <description>Struct for the EWA Parameters</description>
    <variables>
     <variable>
      <type>double</type>
      <name>EWA_rho</name>
      <description></description>
     </variable>
     <variable>
      <type>double</type>
      <name>EWA_phi</name>
      <description></description>
     </variable>
     <variable>
      <type>double</type>
      <name>EWA_delta</name>
      <description></description>
     </variable>
     <variable>
      <type>double</type>
      <name>EWA_beta</name>
      <description></description>
     </variable>
    </variables>
   </dataType>
   <dataType>
    <name>GAParameterStruct</name>
    <description>Struct for the GA Parameters</description>
    <variables>
     <variable>
      <type>double</type>
      <name>prob_cross</name>
      <description>Crossover probability</description>
     </variable>
     <variable>
      <type>double</type>
      <name>prob_mut</name>
      <description>Mutation probability</description>
     </variable>
     <variable>
      <type>int</type>
      <name>string_size</name>
      <description></description>
     </variable>
     <variable>
      <type>int</type>
      <name>pop_size</name>
      <description>Size of the rule population</description>
     </variable>
     <variable>
      <type>double</type>
      <name>reproduction_proportion</name>
      <description>Proportion of population that reproduces</description>
     </variable>
     <variable>
      <type>int</type>
      <name>single_point_cross_over</name>
      <description>Dummy for single-point crossover operator (1: use single-point; 0: use 2-point cross-over)</description>
     </variable>
     <variable>
      <type>int</type>
      <name>election</name>
      <description>Dummy for election operator</description>
     </variable>
     <variable>
      <type>double</type>
      <name>stepsize[5]</name>
      <description>Mutation stepsize for each parameter</description>
     </variable>
     <variable>
      <type>int</type>
      <name>delta_min</name>
      <description>Lower bound on number of units to mutate inside the mutation range: delta_min can be negative or positive. </description>
     </variable>
     <variable>
      <type>int</type>
      <name>delta_max</name>
      <description>Upper bound on number of units to mutate inside the mutation range: delta_max should be positive.</description>
     </variable>
     <variable>
      <type>double</type>
      <name>min_values[5]</name>
      <description>Minimum values for each parameter</description>
     </variable>
     <variable>
      <type>double</type>
      <name>max_values[5]</name>
      <description>Maximum values for each parameter</description>
     </variable>
    </variables>
   </dataType>
   <dataType>
    <name>PublicClassifierRule</name>
    <description>Datatype for the central classifier system. The system is a dynamic array of PublicClassifierRules !Subject to change!</description>
    <variables>
     <variable>
      <type>int</type>
      <name>id</name>
      <description>id for the rule</description>
     </variable>
     <variable>
      <type>int</type>
      <name>counter</name>
      <description>User counter for each rule</description>
     </variable>
     <variable>
      <type>double</type>
      <name>performance</name>
      <description>Total performance for each rule</description>
     </variable>
     <variable>
      <type>double</type>
      <name>avg_performance</name>
      <description>Average performance for each rule (=total performance/counter)</description>
     </variable>
     <variable>
      <type>double</type>
      <name>selection_prob</name>
      <description>Selection probability for the rule</description>
     </variable>
     <variable>
      <type>double</type>
      <name>parameters[5]</name>
      <description>Parameter values encoding the rule</description>
     </variable>
    </variables>
   </dataType>
   <dataType>
    <name>PrivateClassifierRule</name>
    <description>Datatype for the private classifier system inside each agent. The system is a dynamic array of PrivateClassifierRule.  !Subject to change!</description>
    <variables>
     <variable>
      <type>int</type>
      <name>id</name>
      <description>id for each rule</description>
     </variable>
     <variable>
      <type>double</type>
      <name>my_performance</name>
      <description>Agent performance with current_rule (0.0 if this rule is not currently used)</description>
     </variable>
     <variable>
      <type>double</type>
      <name>avg_performance</name>
      <description>Average performance for this rule across population (copied from Central CS)</description>
     </variable>
     <variable>
      <type>double</type>
      <name>attraction</name>
      <description>Agent attractions</description>
     </variable>
     <variable>
      <type>double</type>
      <name>choiceprob</name>
      <description>Agent choice probabilities</description>
     </variable>
     <variable>
      <type>double</type>
      <name>parameters[5]</name>
      <description>Parameter values encoding the rule</description>
     </variable>
    </variables>
   </dataType>
   <dataType>
    <name>SimplePublicClassifierSystem</name>
    <description>Datatype for the central classifier system. Simple version allows for rules of the same strategy type (all rules use the same function). !Subject to change!</description>
    <variables>
     <variable>
      <type>int</type>
      <name>nr_rules</name>
      <description>Total number of rules in the rule set</description>
     </variable>
     <variable>
      <type>PublicClassifierRule</type>
      <name>ruletable[100]</name>
      <description>Static array of 100 public classifier rules of homogeneous type</description>
     </variable>
    </variables>
   </dataType>
   <dataType>
    <name>SimplePrivateClassifierSystem</name>
    <description>Datatype for the private classifier system inside each agent. Simple version allows for rules of the same strategy type (all rules use the same function). !Subject to change!</description>
    <variables>
     <variable>
      <type>int</type>
      <name>nr_rules</name>
      <description>Total number of rules in the rule set</description>
     </variable>
     <variable>
      <type>double</type>
      <name>experience</name>
      <description>Experience variable for EWA learning</description>
     </variable>
     <variable>
      <type>int</type>
      <name>current_rule</name>
      <description>Current rule in use by the agent</description>
     </variable>
     <variable>
      <type>PrivateClassifierRule</type>
      <name>ruletable[100]</name>
      <description>Static array of 100 private classifier rules of homogeneous type</description>
     </variable>
    </variables>
   </dataType>
   <dataType>
    <name>ComplexPublicClassifierSystem</name>
    <description>Datatype for the central classifier system. This complex version allows for heterogeneous rule sets. !Subject to change!</description>
    <variables>
     <variable>
      <type>int</type>
      <name>nr_types</name>
      <description>Number of subpopulations (different types of rules)</description>
     </variable>
     <variable>
      <type>int_array</type>
      <name>nr_rules_per_type</name>
      <description>Nr_rules_per_type may differ per type: size of subpopulations</description>
     </variable>
     <variable>
      <type>int</type>
      <name>nr_rules</name>
      <description>Total number of rules in the rule set</description>
     </variable>
     <variable>
      <type>PublicClassifierRule</type>
      <name>ruletable[100]</name>
      <description>Static array of 100 public classifier rules of heterogenous type</description>
     </variable>
    </variables>
   </dataType>
  </dataTypes>
 </environment>
 <agents>
  <xagent>
   <name>Household</name>
   <description></description>
   <memory>
    <variable>
     <type>EWAParameterStruct</type>
     <name>EWA_parameters</name>
     <description></description>
    </variable>
    <variable>
     <type>SimplePrivateClassifierSystem</type>
     <name>private_classifiersystem</name>
     <description></description>
    </variable>
    <variable>
     <type>int</type>
     <name>switch_ewa</name>
     <description>Switch to turn on/off EWA learning. Copy from global constant.</description>
    </variable>
   </memory>
   <functions>
    <function>
     <name>idle</name>
     <description>Idle to bypass the EWA module.</description>
     <currentState>Household_Activate_EWA</currentState>
     <nextState>Household_End_EWA_Learning</nextState>
     <condition>
      <lhs>
       <value>a.switch_ewa</value>
      </lhs>
      <op>EQ</op>
      <rhs>
       <value>0</value>
      </rhs>
     </condition>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>idle</name>
     <description>Idle to activate EWA, going from state Household_Activate_EWA to Household_Start_EWA_Learning.</description>
     <currentState>Household_Activate_EWA</currentState>
     <nextState>Household_Start_EWA_Learning</nextState>
     <condition>
      <lhs>
       <value>a.switch_ewa</value>
      </lhs>
      <op>EQ</op>
      <rhs>
       <value>1</value>
      </rhs>
     </condition>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>idle</name>
     <description>Idle bypassing Initialization phase</description>
     <currentState>Household_Start_EWA_Learning</currentState>
     <nextState>Start_GA</nextState>
     <condition>
      <not>
       <time>
        <period>millionyearly</period>
        <phase>1</phase>
       </time>
      </not>
     </condition>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>Household_initialize_rule_details</name>
     <description></description>
     <currentState>Household_Start_EWA_Learning</currentState>
     <nextState>001_ewa</nextState>
     <condition>
      <time>
       <period>millionyearly</period>
       <phase>1</phase>
      </time>
     </condition>
     <inputs>
      <input>
       <messageName>initial_rule_details</messageName>
      </input>
     </inputs>
     <outputs/>
    </function>
    <function>
     <name>Household_portfolio_strategy_interface</name>
     <description></description>
     <currentState>001_ewa</currentState>
     <nextState>Start_GA</nextState>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>idle</name>
     <description>Idle bypassing the GA</description>
     <currentState>Start_GA</currentState>
     <nextState>End_GA</nextState>
     <condition>
      <lhs>
       <not>
        <time>
         <period>yearly</period>
         <phase>1</phase>
        </time>
       </not>
      </lhs>
      <op>OR</op>
      <rhs>
       <time>
        <period>millionyearly</period>
        <phase>1</phase>
       </time>
      </rhs>
     </condition>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>Household_print_private_classifiersystem</name>
     <description></description>
     <currentState>Start_GA</currentState>
     <nextState>01_ewa</nextState>
     <condition>
      <lhs>
       <time>
        <period>yearly</period>
        <phase>1</phase>
       </time>
      </lhs>
      <op>AND</op>
      <rhs>
       <not>
        <time>
         <period>millionyearly</period>
         <phase>1</phase>
        </time>
       </not>
      </rhs>
     </condition>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>Household_reset_private_classifiersystem</name>
     <description></description>
     <currentState>01_ewa</currentState>
     <nextState>02_ewa</nextState>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>Household_read_and_update_rule_details</name>
     <description></description>
     <currentState>02_ewa</currentState>
     <nextState>End_GA</nextState>
     <inputs>
      <input>
       <messageName>rule_details</messageName>
      </input>
     </inputs>
     <outputs/>
    </function>
    <function>
     <name>idle</name>
     <description>Idle bypassing the EWA</description>
     <currentState>End_GA</currentState>
     <nextState>Household_End_EWA_Learning</nextState>
     <condition>
      <lhs>
       <not>
        <time>
         <period>monthly</period>
         <phase>0</phase>
        </time>
       </not>
      </lhs>
      <op>OR</op>
      <rhs>
       <time>
        <period>millionyearly</period>
        <phase>1</phase>
       </time>
      </rhs>
     </condition>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>Household_send_rule_performance</name>
     <description></description>
     <currentState>End_GA</currentState>
     <nextState>03_ewa</nextState>
     <condition>
      <lhs>
       <time>
        <period>monthly</period>
        <phase>0</phase>
       </time>
      </lhs>
      <op>AND</op>
      <rhs>
       <not>
        <time>
         <period>millionyearly</period>
         <phase>1</phase>
        </time>
       </not>
      </rhs>
     </condition>
     <inputs/>
     <outputs>
      <output>
       <messageName>rule_performance</messageName>
      </output>
     </outputs>
    </function>
    <function>
     <name>Household_read_all_performances</name>
     <description></description>
     <currentState>03_ewa</currentState>
     <nextState>04_ewa</nextState>
     <inputs>
      <input>
       <messageName>new_performances</messageName>
      </input>
     </inputs>
     <outputs/>
    </function>
    <function>
     <name>Household_select_rule</name>
     <description></description>
     <currentState>04_ewa</currentState>
     <nextState>05_ewa</nextState>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>Household_portfolio_strategy_interface</name>
     <description></description>
     <currentState>05_ewa</currentState>
     <nextState>Household_End_EWA_Learning</nextState>
     <inputs/>
     <outputs/>
    </function>
   </functions>
  </xagent>
  <xagent>
   <name>FinancialAgent</name>
   <description></description>
   <memory>
    <variable>
     <type>SimplePublicClassifierSystem</type>
     <name>public_classifiersystem</name>
     <description>Public classifiersystem holding the rule table.</description>
    </variable>
    <variable>
     <type>SimplePublicClassifierSystem</type>
     <name>public_classifiersystem_candidates</name>
     <description>Public classifiersystem to hold the candidate offspring bitstrings, before copying them into the parent population.</description>
    </variable>
    <variable>
     <type>GAParameterStruct</type>
     <name>GA_parameters</name>
     <description></description>
    </variable>
    <variable>
     <type>EWAParameterStruct</type>
     <name>EWA_parameters</name>
     <description></description>
    </variable>
   </memory>
   <functions>
    <function>
     <name>idle</name>
     <description>Idle bypassing Initialization phase</description>
     <currentState>Start_FinancialAgent</currentState>
     <nextState>Start_GA</nextState>
     <condition>
      <not>
       <time>
        <period>millionyearly</period>
        <phase>1</phase>
       </time>
      </not>
     </condition>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>FinancialAgent_initialize_rule_details</name>
     <description></description>
     <currentState>Start_FinancialAgent</currentState>
     <nextState>Start_GA</nextState>
     <condition>
      <time>
       <period>millionyearly</period>
       <phase>1</phase>
      </time>
     </condition>
     <inputs/>
     <outputs>
      <output>
       <messageName>initial_rule_details</messageName>
      </output>
     </outputs>
    </function>
    <function>
     <name>idle</name>
     <description>Idle bypassing the GA</description>
     <currentState>Start_GA</currentState>
     <nextState>End_GA</nextState>
     <condition>
      <lhs>
       <not>
        <time>
         <period>yearly</period>
         <phase>1</phase>
        </time>
       </not>
      </lhs>
      <op>OR</op>
      <rhs>
       <time>
        <period>millionyearly</period>
        <phase>1</phase>
       </time>
      </rhs>
     </condition>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>FinancialAgent_apply_GA</name>
     <description></description>
     <currentState>Start_GA</currentState>
     <nextState>01</nextState>
     <condition>
      <lhs>
       <time>
        <period>yearly</period>
        <phase>1</phase>
       </time>
      </lhs>
      <op>AND</op>
      <rhs>
       <not>
        <time>
         <period>millionyearly</period>
         <phase>1</phase>
        </time>
       </not>
      </rhs>
     </condition>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>FinancialAgent_send_rule_details</name>
     <description></description>
     <currentState>01</currentState>
     <nextState>02</nextState>
     <inputs/>
     <outputs>
      <output>
       <messageName>rule_details</messageName>
      </output>
     </outputs>
    </function>
    <function>
     <name>FinancialAgent_print_public_classifiersystem</name>
     <description></description>
     <currentState>02</currentState>
     <nextState>03</nextState>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>FinancialAgent_reset_public_classifiersystem</name>
     <description>Resetting user counter, performance sum, avg_performance</description>
     <currentState>03</currentState>
     <nextState>End_GA</nextState>
     <inputs/>
     <outputs/>
    </function>
    <function>
     <name>FinancialAgent_read_rule_performance_and_update_classifiersystem</name>
     <description></description>
     <currentState>End_GA</currentState>
     <nextState>04</nextState>
     <inputs>
      <input>
       <messageName>rule_performance</messageName>
      </input>
     </inputs>
     <outputs/>
    </function>
    <function>
     <name>FinancialAgent_send_all_performances</name>
     <description></description>
     <currentState>04</currentState>
     <nextState>end_FinancialAgent</nextState>
     <inputs/>
     <outputs>
      <output>
       <messageName>new_performances</messageName>
      </output>
     </outputs>
    </function>
   </functions>
  </xagent>
 </agents>
 <messages>
  <message>
   <name>rule_performance</name>
   <description></description>
   <variables>
    <variable>
     <type>int</type>
     <name>rule_id</name>
     <description></description>
    </variable>
    <variable>
     <type>double</type>
     <name>rule_performance</name>
     <description></description>
    </variable>
   </variables>
  </message>
  <message>
   <name>new_performances</name>
   <description></description>
   <variables>
    <variable>
     <type>int</type>
     <name>rule_id</name>
     <description></description>
    </variable>
    <variable>
     <type>double</type>
     <name>avg_performance</name>
     <description></description>
    </variable>
   </variables>
  </message>
  <message>
   <name>initial_rule_details</name>
   <description></description>
   <variables>
    <variable>
     <type>int</type>
     <name>rule_id</name>
     <description></description>
    </variable>
    <variable>
     <type>double</type>
     <name>parameters[5]</name>
     <description></description>
    </variable>
   </variables>
  </message>
  <message>
   <name>rule_details</name>
   <description></description>
   <variables>
    <variable>
     <type>int</type>
     <name>rule_id</name>
     <description></description>
    </variable>
    <variable>
     <type>double</type>
     <name>parameters[5]</name>
     <description></description>
    </variable>
   </variables>
  </message>
 </messages>
</xmodel>
