<?xml version="1.0"?>
<!DOCTYPE xmodel SYSTEM "http://eurace.cs.bilgi.edu.tr/XMML.dtd">
<xmodel version="2">

<!--************************* NOTES ***************************************-->
<!--This is the main description file for the IPD game-->
<!-- Agents involved: GamePlayer, GameSolver-->
<!--Ref.: Miller, J.H., 1996. The coevolution of automata in the repeated prisoner's dilemma.-->
<!--Journal of Economic Behavior and Organization 29, 87}112.-->

<name>Iterated Prisoners Dilemma Game</name>
<version>2</version>
<description>Sander van der Hoog, 29/11/07, 09/08/08 (changed to conform to stategraph method)</description>

<!--***************** Environment values and functions **********************-->
<environment>
    <constants>
		<variable><type>int</type><name>nr_params</name><description>10, Number of parameters in a rule.</description></variable>
		<variable><type>int</type><name>print_debug</name><description>0 or 1, Boolean for debugging print statements.</description></variable>
		<variable><type>int</type><name>print_log</name><description>0 or 1, A flag to print logging output to terminal or to file.</description></variable>
    </constants>

    <functionFiles>
  		<file>GamePlayer_functions.c</file>
		<file>GameSolver_functions.c</file>
		<file>mylibraryfunctions.c</file>
    </functionFiles>
    
	<timeUnits>	
	<timeUnit>
	 <name>daily</name>
	 <unit>iteration</unit>
	 <period>1</period>
	</timeUnit>
	
	<timeUnit>
	 <name>weekly</name>
	 <unit>daily</unit>
	 <period>5</period>
	</timeUnit>
	
	<timeUnit>
	 <name>monthly</name>
	 <unit>weekly</unit>
	 <period>4</period>
	</timeUnit>
	
	<timeUnit>
	 <name>quarterly</name>
	 <unit>monthly</unit>
	 <period>3</period>
	</timeUnit>
	
	<timeUnit>
	 <name>yearly</name>
	 <unit>monthly</unit>
	 <period>12</period>
	</timeUnit>
	
	<timeUnit>
	 <name>millionyearly</name>
	 <unit>yearly</unit>
	 <period>1000000</period>
	</timeUnit>
	</timeUnits>

<!--Structures-->
<dataTypes>
    <dataType>
	<!--***************************** Struct for the EWA Parameters *****************************-->
	<name>EWAParameterStruct</name>
	<description>Struct for the EWA Parameters</description>
	<variables>
		<variable>
		<type>double</type>
		<name>EWA_rho</name>
		<description></description>
		</variable>
		<variable>
		<type>double</type>
		<name>EWA_phi</name>
		<description></description>
		</variable>
		<variable>
		<type>double</type>
		<name>EWA_delta</name>
		<description></description>
		</variable>
		<variable>
		<type>double</type>
		<name>EWA_beta</name>
		<description></description>
		</variable>
	</variables>
	</dataType>
	<!--***************************** GA Datastructure *****************************-->
	<dataType>
	<!--***************************** Struct for the GA Parameters *****************************-->
	<name>GAParameterStruct</name>
	<description>Struct for the GA Parameters</description>
	<variables>
		<variable>
		<type>double</type>
		<name>prob_cross</name>
		<description>Crossover probability</description>
		</variable>
		<variable>
		<type>double</type>
		<name>prob_mut</name>
		<description>Mutation probability</description>
		</variable>
		<variable>
		<type>int</type>
		<name>string_size</name>
		<description></description>
		</variable>
		<variable>
		<type>int</type>
		<name>pop_size</name>
		<description>Size of the rule population</description>
		</variable>
		<variable>
		<type>double</type>
		<name>reproduction_proportion</name>
		<description>Proportion of population that reproduces</description>
		</variable>
		<variable>
		<type>int</type>
		<name>single_point_cross_over</name>
		<description>Dummy for single-point crossover operator (1: use single-point; 0: use 2-point cross-over)</description>
		</variable>
		<variable>
		<type>int</type>
		<name>election</name>
		<description>Dummy for election operator</description>
		</variable>
		<variable>
		<type>double</type>
		<name>stepsize[10]</name>
		<description>Mutation stepsize for each parameter</description>
		</variable>
		<variable>
		<type>int</type>
		<name>delta_min</name>
		<description>Lower bound on number of units to mutate inside the mutation range: delta_min can be negative or positive. </description>
		</variable>
		<variable>
		<type>int</type>
		<name>delta_max</name>
		<description>Upper bound on number of units to mutate inside the mutation range: delta_max should be positive.</description>
		</variable>
		<variable>
		<type>double</type>
		<name>min_values[10]</name>
		<description>Minimum values for each parameter</description>
		</variable>
		<variable>
		<type>double</type>
		<name>max_values[10]</name>
		<description>Maximum values for each parameter</description>
		</variable>
	</variables>
	</dataType>
	
	<dataType>
	<!--***************************** Struct for the PublicClassifierRule *****************************-->
	<name>PublicClassifierRule</name>
	<description>Datatype for the central classifier system. The system is a dynamic array of PublicClassifierRules !Subject to change!</description>
	<variables>
		<variable>
		<type>int</type><name>id</name>
		<description>id for the rule</description>
		</variable>
		<variable>
		<type>int</type><name>counter</name>
		<description>User counter for each rule</description>
		</variable>
		<variable>
		<type>double</type><name>performance</name>
		<description>Total performance for each rule</description>
		</variable>
		<variable>
		<type>double</type><name>avg_performance</name>
		<description>Average performance for each rule (=total performance/counter)</description>
		</variable>
		<variable>
		<type>double</type><name>selection_prob</name>
		<description>Selection probability for the rule</description>
		</variable>
		<variable><type>double</type>
		<name>parameters[10]</name>
		<description>Parameter values encoding the rule</description>
		</variable>
	</variables>
	</dataType>
	<dataType>
	<!--***************************** Struct for the Private Classifier Rule *****************************-->
	<name>PrivateClassifierRule</name>
	<description>Datatype for the private classifier system inside each agent. The system is a dynamic array of PrivateClassifierRule.  !Subject to change!</description>
	<variables>
		<variable>
		<type>int</type><name>id</name>
		<description>id for each rule</description>
		</variable>
		<variable>
		<type>double</type><name>my_performance</name>
		<description>Agent performance with current_rule (0.0 if this rule is not currently used)</description>
		</variable>
		<variable>
		<type>double</type><name>avg_performance</name>
		<description>Average performance for this rule across population (copied from Central CS)</description>
		</variable>
		<variable>
		<type>double</type><name>attraction</name>
		<description>Agent attractions</description>
		</variable>
		<variable>
		<type>double</type><name>choiceprob</name>
		<description>Agent choice probabilities</description>
		</variable>
		<variable><type>double</type>
		<name>parameters[10]</name>
		<description>Parameter values encoding the rule</description>
		</variable>
	</variables>
	</dataType>
	
	<dataType>
	<!--***************************** Struct for the Simple Public Classifier System *****************************-->
	<name>SimplePublicClassifierSystem</name>
	<description>Datatype for the central classifier system. Simple version allows for rules of the same strategy type (all rules use the same function). !Subject to change!</description>
	<variables>
		<variable>
			<type>int</type>
			<name>nr_rules</name>
			<description>Total number of rules in the rule set</description>
		</variable>
	
		<variable>
			<type>PublicClassifierRule</type>
			<name>ruletable[100]</name>
			<description>Static array of 100 public classifier rules of homogeneous type</description>
		</variable>
	</variables>
	</dataType>

	<dataType>
	<!--***************************** Struct for the Simple Private Classifier System *****************************-->
	<name>SimplePrivateClassifierSystem</name>
	<description>Datatype for the private classifier system inside each agent. Simple version allows for rules of the same strategy type (all rules use the same function). !Subject to change!</description>
	<variables>
		<variable>
			<type>int</type>
			<name>nr_rules</name>
			<description>Total number of rules in the rule set</description>
		</variable>
	
		<variable>
		<type>double</type><name>experience</name>
		<description>Experience variable for EWA learning</description>
		</variable>
		
		<variable>
		<type>int</type>
		<name>current_rule</name>
		<description>Current rule in use by the agent</description>
		</variable>
	
		<variable>
			<type>PrivateClassifierRule</type>
			<name>ruletable[100]</name>
			<description>Static array of 100 private classifier rules of homogeneous type</description>
		</variable>
	</variables>
	</dataType>
</dataTypes>
</environment>

<agents>
<!--********************* X-machine Agent - GamePlayer ****************************-->
<xagent>
<name>GamePlayer</name>
<description></description>
<memory>
      	<variable><type>int</type><name>id</name><description></description></variable>
		<variable><type>int</type><name>day_of_month_to_act</name><description></description></variable>
      
        <variable>
          <type>EWAParameterStruct</type>
          <name>EWA_parameters</name>
          <description></description>
        </variable>
        <variable>
          <type>SimplePrivateClassifierSystem</type>
          <name>private_classifiersystem</name>
          <description></description>
        </variable>
</memory>
<roles></roles>

<!----------------- Defining functions ---------------------------------------->
<functions>

<!--EWA Functions-->
<function>
	<name>Every_period</name>
	<depends>
		<name>GamePlayer_reset_private_classifiersystem</name>
		<type>internal</type>
	</depends>
</function>
<function>
	<name>GamePlayer_send_current_rule_message</name>
	<depends>
			<name>Every_period</name>
			<type>internal</type>
	</depends>
</function>

<function>
	<name>GamePlayer_read_all_performances_message</name>
	<depends>
		<name>GameSolver_send_all_performances_message</name>
		<type>all_performances_message</type>
	</depends>
</function>

<function>
	<name>GamePlayer_select_rule</name>
	<depends>
		<name>GamePlayer_read_all_performances_message</name>
		<type>internal</type>
	</depends>
</function>

<function>
	<!--Dummy function that only reads a ruledetailsystem_message and then fires up the reset_private_classifiersystem fn.--><name>GamePlayer_read_ruledetailsystem_message</name>
	<depends>
		<name>GameSolver_send_ruledetailsystem_message</name>
		<type>ruledetailsystem_message</type>
	</depends>
</function>

<function><!--This function should only run if there is a new ruledetailsystem in the GameSolver agent.--><name>GamePlayer_reset_private_classifiersystem</name>
	<depends>
		<name>GamePlayer_read_ruledetailsystem_message</name>
		<type>internal</type></depends>
</function>

</functions>
</xagent>
<!--*********************** End of Agent - GamePlayer *****************************-->

<!--********************* X-machine Agent - GameSolver ****************************-->
<xagent>
<name>GameSolver</name>
<description></description>
<memory>
        <variable><type>int</type><name>id</name><description></description></variable>
      
        <variable>
          <type>SimplePublicClassifierSystem</type>
          <name>public_classifiersystem</name>
          <description></description>
        </variable>
        <variable>
          <type>GAParameterStruct</type>
          <name>GA_parameters</name>
          <description></description>
        </variable>
        <variable>
          <type>EWAParameterStruct</type>
          <name>EWA_parameters</name>
          <description></description>
        </variable>
</memory>
<roles></roles>
<!----------------- Defining functions ---------------------------------------->
<functions>
<!--EWA Functions-->
<function>
		<!--Resets performance and avgperformance for all rules. Daily.-->
		<name>GameSolver_daily_reset_public_classifiersystem</name>
</function>
<function><name>GameSolver_read_current_rule_message</name><depends>
			<name>GameSolver_daily_reset_public_classifiersystem</name>
			<type>internal</type></depends>
<depends><name>GamePlayer_send_current_rule_message</name><type>current_rule_message</type></depends>
</function><function>
		<name>GameSolver_play_tournament</name>
		<depends><name>GameSolver_read_current_rule_message</name>
			<type>internal</type></depends></function><function><name>GameSolver_update_classifiersystem</name>
<depends><name>GameSolver_play_tournament</name><type>internal</type></depends>
</function>
	

	<function><name>GameSolver_send_all_performances_message</name>
<depends><name>GameSolver_update_classifiersystem</name><type>internal</type></depends>
</function>
	<function>
		<name>Every_100_periods</name></function>
	<function><name>GameSolver_apply_GA</name>
	<depends>
		<name>Every_100_periods</name>
		<type>internal</type></depends></function>
	<function>
		<name>GameSolver_reset_public_classifiersystem</name>
		<depends>
			<name>GameSolver_apply_GA</name>
			<type>internal</type></depends></function>
	
<function><name>GameSolver_send_ruledetailsystem_message</name>
<depends><name>GameSolver_apply_GA</name><type>internal</type></depends>
</function>


</functions>
</xagent>
<!--*********************** End of Agent - GameSolver ****************************-->
</agents>
<contexts></contexts>

<!--******** Messages being posted by the agents to communicate *************-->
<messages><!--EWA messages-->

<message>
<name>rule_performance</name>
<description>Message sent by GamePlayer to tell the GameSolver which rule is currently used</description>
      <variables>
        <variable>
          <type>int</type>
          <name>rule_id</name>
          <description></description>
        </variable>
        <variable>
          <type>double</type>
          <name>rule_performance</name>
          <description></description>
        </variable>
      </variables>
</message>
    <message>
      <name>new_performances</name>
      <description>Message sent by GameSolver to inform GamePlayers of all rule performances</description>
      <variables>
        <variable>
          <type>int</type>
          <name>rule_id</name>
          <description></description>
        </variable>
        <variable>
          <type>double</type>
          <name>avg_performance</name>
          <description></description>
        </variable>
      </variables>
    </message>
    <message>
      <name>rule_details</name>
      <description>GameSolver adds new rule details</description>
      <variables>
        <variable>
          <type>int</type>
          <name>rule_id</name>
          <description></description>
        </variable>
        <variable>
          <type>double</type>
          <name>parameters[10]</name>
          <description></description>
        </variable>
      </variables>
    </message>
</messages>
<!--********************** End of Messages **********************************-->

</xmodel>
