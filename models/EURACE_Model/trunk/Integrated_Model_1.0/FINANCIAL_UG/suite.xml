<suite>
<name>Financial_market_suite</name>
<constants>
<trading_activity>0.1</trading_activity>
<current_day>1</current_day>
<days_in_month>20</days_in_month>
<seed>2345678901</seed>
</constants>
<unittest>
<name>test_Household_update_its_portfolio</name>
<function>Household_update_its_portfolio</function>
<xagent>Household</xagent>
<declaration>
<variables>
 <variable>
     <type>Asset_array</type>
     <name>assetsowned</name>
 </variable>
<variable>
     <type>Order_array</type>
     <name>pendingOrders</name>
 </variable>
<variable>
     <type>double</type>
     <name>payment_account</name>
 </variable>
</variables>
</declaration>
<fixture>
<Household>
<id>1</id>
<payment_account>9000</payment_account>
<assetsowned>{{1,50,100}}</assetsowned>
<pendingOrders>{{1,50,90,1}}</pendingOrders>
</Household>
<messages>
<order_status>{{1,1,100,50}}</order_status>
</messages>
</fixture>
<expected>
<Household>
<payment_account>4000.000000</payment_account>
<pendingOrders>{{1,0,90,1}}</pendingOrders>
<assetsowned>{{1,100,100}}</assetsowned>
</Household>
</expected>
</unittest>
<unittest>
<name>test_Household_stock_beliefs_formation</name>
<function>Household_stock_beliefs_formation</function>
<xagent>Household</xagent>
<declaration>
<variables>
 <variable>
     <type>Belief_array</type>
     <name>beliefs</name>
 </variable>
</variables>
</declaration>
<fixture>
<Household>
<id>1</id>
<forwardWindow>5</forwardWindow>
<backwardWindow>3</backwardWindow>
<randomWeight>1</randomWeight>
<fundamentalWeight>0</fundamentalWeight>
<chartistWeight>0</chartistWeight>
</Household>
<messages>
<info_firm>{{1,5000.0,10000.0,2000.0,3000.0,{1,16000,0{}{0.00420828227021,-0.00725378982753,0.00732626453079,0.025372424975,0.0111471065738,0.0161597541288,0.00986767030965,0.0171561210037,0.0310703635826,-0.0105579422429,-0.00337635483084,0.0184119494167,-0.00366104715532,-0.00111488961765,-0.00619834354445,-0.0023893054546,-0.0181774805756,-0.0169313007097,-0.0255222201077,-0.020405976233,-0.00123125813462,-0.0175071721491,-0.0107037949292,-0.0186070122066,0.0284904917925,-0.000306972900428,-0.0278521860701,0.0165566913189,-0.00803329859819,0.0380561981181,0.0161053011473,0.0125326455862,0.0102087297231,0.016577293409,-0.0177387974766,-0.0165315993098,0.0271325073262,-0.0188124113595,0.0360934959853,-0.0116977454902,0.00476752065979,0.0241590175569,0.0179569109552,-0.0376310384836,-0.0182598792478,0.00615102632525,-0.0232765156648,0.0078621594039,-0.0260279371781,-0.00109452076155,-0.00551889206769,0.0278738249187,-0.0329756629478,0.0172609604801,-0.00206968743736,0.0171559723429,-0.0032243788381,0.0101188682701,-0.0249854381039,0.0117394548586,-0.01640380308,-0.0271525865763,0.00298369560288,-0.00978178727724,-0.0131047531111,-0.0218615152054,-0.00540609121905,-0.0375690507619,-0.0113477728622,0.0110216301332,-0.00359932407829,-0.00973941118675,-0.0185928107304,0.00775568574425,-0.00673463329227,0.0107013572816,0.020880506824,0.019002133804,0.00148313637848,-0.00166045249635,0.0459441953619,0.0274690635391,0.00922394128236,-0.0153929124617,0.0110646738499,-0.00891781529998,0.022743808232,-0.00821505924067,0.00658608175154,-0.0110368719387,-0.0219648882508,0.00117764340275,-0.0062829165482,-0.0209199515375,-0.0258471922105,-0.00187231261686,0.0254108068535,0.0253108089735,-0.0348305199561,-0.000439049766779}}</info_firm>
</messages>
</fixture>
<expected>
<Household>
<id>1</id>
<assetsowned>{{1,10,100}}</assetsowned>
<beliefs>{{1,-2.271673,-2.271673,0.000000,0.000000,5000.000000,2000.000000,0.010934,0.000000}}</beliefs>
</Household>
</expected>
</unittest>
<unittest>
<name>test_ClearingHouse_receive_orders_and_run</name>
<constants>
<seed>2345678901</seed>
</constants>
<function>ClearingHouse_receive_orders_and_run</function>
<xagent>Clearinghouse</xagent>
<assertions>
<messages>
<message>
<name>order_status</name>
</message>
</messages>
</assertions>
<fixture>
<Clearinghouse>
<assets>{{1,1000,50}}</assets>
<clearingmechanism>{0.0,0,{},{},{}}</clearingmechanism>
<id>52</id>
<region_id>1</region_id>
<partition_id>0</partition_id>
</Clearinghouse>
<messages>
<order>{{1,1,50.1,100},{2,1,50.2,100},{3,1,50.3,100},{4,1,50.4,100},{5,1,50.5,100},{6,1,49.9,-100},{7,1,50.1,-100},{8,1,49.8,-100},{9,1,49.8,-100},{10,1,50.4,-100}}</order>
</messages>
</fixture>
<expected>
<messages>
<order_status>{{2,1,50.200000,100},{3,1,50.200000,100},{4,1,50.200000,100},{5,1,50.200000,100},{8,1,50.200000,-100},{9,1,50.200000,-100},{6,1,50.200000,-100},{7,1,50.200000,-100}}</order_status>
</messages>
</expected>
</unittest>
<unittest>
<name>test_ClearingHouse_receive_orders_and_run_2</name>
<description>this case reppresents the standard way how the clearing house work, it compute the price from a group of orders that match  </description>
<function>ClearingHouse_receive_orders_and_run</function>
<xagent>Clearinghouse</xagent>
<assertions>
<messages>
<message>
<name>order_status</name>
</message>
</messages>
</assertions>
<fixture>
<Clearinghouse>
<assets>{{1,1000,50},{2,1000,50}}</assets>
<clearingmechanism>{0.0,0,{},{},{}}</clearingmechanism>
<id>52</id>
<region_id>1</region_id>
<partition_id>0</partition_id>
</Clearinghouse>
<messages>
<order>{{1,1,50.1,100},{2,1,50.2,100},{3,1,50.3,100},{4,1,50.4,100},{5,1,50.5,100},{6,1,49.9,-100},{7,1,50.1,-100},{8,1,49.8,-100},{9,1,49.8,-100},{10,1,50.4,-100},{1,2,50.1,100},{2,2,50.2,100},{3,2,50.3,100},{4,2,50.4,100},{5,2,50.5,100},{6,2,49.9,-100},{7,2,50.1,-100},{8,2,49.8,-100},{9,2,49.8,-100},{10,2,50.4,-100}}</order>
</messages>
</fixture>
<expected>
<messages>
<order_status>{{2,1,50.200000,100},{3,1,50.200000,100},{4,1,50.200000,100},{5,1,50.200000,100},{8,1,50.200000,-100},{9,1,50.200000,-100},{6,1,50.200000,-100},{7,1,50.200000,-100},{2,2,50.200000,100},{3,2,50.200000,100},{4,2,50.200000,100},{5,2,50.200000,100},{8,2,50.200000,-100},{9,2,50.200000,-100},{6,2,50.200000,-100},{7,2,50.200000,-100}}</order_status>
</messages>
</expected>
</unittest>
<unittest>
<name>test_ClearingHouse_receive_orders_3</name>
<description>this test verifies that the correct price computation with any sell orders  match to a buy order</description>  
<function>ClearingHouse_receive_orders_and_run</function>
<xagent>Clearinghouse</xagent>
<assertions>
<messages>
<message>
<name>order_status</name>
</message>
</messages>
</assertions>
<fixture>
<Clearinghouse>
<assets>{{1,1000,50}}</assets>
<clearingmechanism>{0.0,0,{},{},{}}</clearingmechanism>
<id>52</id>
<region_id>1</region_id>
<partition_id>0</partition_id>
</Clearinghouse>
<messages>
<order>{{1,1,50.1,100},{2,1,50.2,100},{3,1,50.3,100},{4,1,50.4,100},{5,1,50.5,100},{6,1,50.6,-100},{7,1,50.7,-100},{8,1,50.6,-100},{9,1,50.7,-100},{10,1,50.7,-100}}</order>
</messages>
</fixture>
<expected>
<messages>
<order_status>{}</order_status>
</messages>
</expected>
</unittest>
<unittest>
<name>test_ClearingHouse_receive_orders_4</name>
<description>this test verifies that the correct price computation with only a price that match</description>  
<function>ClearingHouse_receive_orders_and_run</function>
<xagent>Clearinghouse</xagent>
<assertions>
<messages>
<message>
<name>order_status</name>
</message>
</messages>
</assertions>
<fixture>
<Clearinghouse>
<assets>{{1,1000,50}}</assets>
<clearingmechanism>{0.0,0,{},{},{}}</clearingmechanism>
<id>52</id>
<region_id>1</region_id>
<partition_id>0</partition_id>
</Clearinghouse>
<messages>
<order>{{1,1,50.1,100},{2,1,50.2,100},{3,1,50.3,100},{4,1,50.4,100},{5,1,50.5,100},{6,1,50.5,-100},{7,1,50.7,-100},{8,1,50.6,-100},{9,1,50.7,-100},{10,1,50.7,-100}}</order>
</messages>
</fixture>
<expected>
<messages>
<order_status>{{5,1,50.500000,100},{6,1,50.500000,-100}}</order_status>
</messages>
</expected>
</unittest>
<unittest>
<name>test_ClearingHouse_receive_no_orders</name>
<description>this test verifies that the correct price computation with an asset in the market but anyone send an order, in this case will be considered the last transaction related the specific asset</description>  
<function>ClearingHouse_receive_orders_and_run</function>
<xagent>Clearinghouse</xagent>
<assertions>
<messages>
<message>
<name>order_status</name>
</message>
</messages>
<variables>
 <variable>
     <type>Asset_array</type>
     <name>assets</name>
 </variable>
</variables>
</assertions>
<fixture>
<Clearinghouse>
<assets>{{1,1000,50}}</assets>
<clearingmechanism>{0.0,0,{},{},{}}</clearingmechanism>
<id>52</id>
<region_id>1</region_id>
<partition_id>0</partition_id>
</Clearinghouse>
<messages>
<order>{}</order>
</messages>
</fixture>
<expected>
<Clearinghouse>
<assets>{{1,1000,50}}</assets>
</Clearinghouse>
<messages>
<order_status>{}</order_status>
</messages>
</expected>
</unittest>
<unittest>
<name>test_ClearingHouse_receive_no_sell_orders</name>
<description>this test verifies that the correct price computation with an asset in the market but anyone send an order of sell, in this case will be considered the price of last transaction  multiplied by 1.01 to avoid a possible deadlock</description>  
<function>ClearingHouse_receive_orders_and_run</function>
<xagent>Clearinghouse</xagent>
<assertions>
<messages>
<message>
<name>order_status</name>
</message>
</messages>
<variables>
 <variable>
     <type>Asset_array</type>
     <name>assets</name>
 </variable>
</variables>
</assertions>
<fixture>
<Clearinghouse>
<assets>{{1,1000,50}}</assets>
<clearingmechanism>{0.0,0,{},{},{}}</clearingmechanism>
<id>52</id>
<region_id>1</region_id>
<partition_id>0</partition_id>
</Clearinghouse>
<messages>
<order>{{1,1,50.1,100},{2,1,50.2,100},{3,1,50.3,100},{4,1,50.4,100},{5,1,50.5,100}}</order>
</messages>
</fixture>
<expected>
<Clearinghouse>
<assets>{{1,0,50.5}}</assets>
</Clearinghouse>
<messages>
<order_status>{}</order_status>
</messages>
</expected>
</unittest>
<unittest>
<name>test_ClearingHouse_receive_orders_with_rationing</name>
<description>this test verifies that the correct price computation with some orders that match but there are unbalancing between the demand and the supply </description>  
<function>ClearingHouse_receive_orders_and_run</function>
<xagent>Clearinghouse</xagent>
<assertions>
<messages>
<message>
<name>order_status</name>
</message>
</messages>
<variables>
 <variable>
     <type>Asset_array</type>
     <name>assets</name>
 </variable>
</variables>
</assertions>
<fixture>
<Clearinghouse>
<assets>{{1,1000,50}}</assets>
<clearingmechanism>{0.0,0,{},{},{}}</clearingmechanism>
<id>52</id>
<region_id>1</region_id>
<partition_id>0</partition_id>
</Clearinghouse>
<messages>
<order>{{1,1,50.1,100},{2,1,50.1,-40}}</order>
</messages>
</fixture>
<expected>
<Clearinghouse>
<assets>{{1,40,50.1}}</assets>
</Clearinghouse>
<messages>
<order_status>{{1,1,50.1,40},{2,1,50.1,-40}}</order_status>
</messages>
</expected>
</unittest>
</suite>

