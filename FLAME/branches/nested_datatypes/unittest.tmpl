/**
 * \file  unittest.c
 * \brief Holds main function of the unittest program.
 */

#include "header.h"
#include <CUnit/Basic.h>

int init_suite1(void)
{
	initialise_pointers();
	add_node(0, -SPINF, SPINF, -SPINF, SPINF, -SPINF, SPINF);
	current_node = *p_node_info;
	p_xmachine = &current_node->agents;
<?foreach message?>	p_$name_message = &current_node->$name_messages;
<?end foreach?>	
	/* Add one agent for each type */
<?foreach xagent?>	xmachine_memory_$name * current_$name_agent = init_$name_agent();
<?end foreach?><?foreach xagent?>	add_$name_agent_internal(current_$name_agent);
<?end foreach?>	
	return 0;
}

int clean_suite1(void)
{
	clean_up(0);
	
	return 0;
}

<?foreach xagent?><?foreach function?>void unittest_$name()
{
	
}

<?end foreach?><?end foreach?>/** \fn int main(int argc, char * argv[])
 * \brief Main program loop.
 * \param argc Argument count.
 * \param argv Pointer Pointer to Argument vector.
 */
int main(int argc, char * argv[])
{
	CU_pSuite pSuite = NULL;
	
	/* initialize the CUnit test registry */
	if (CUE_SUCCESS != CU_initialize_registry())
		return CU_get_error();
	
	/* add a suite to the registry */
	pSuite = CU_add_suite("Suite_1", init_suite1, clean_suite1);
	if (NULL == pSuite)
	{
		CU_cleanup_registry();
		return CU_get_error();
	}
	
	/* add the tests to the suite */
	/* add extra tests using || */
	
	if(<?foreach xagent?><?foreach function?>NULL == CU_add_test(pSuite, "$name", unittest_$name)<?if notlast?> ||
		<?end if?><?end foreach?><?end foreach?>)
	{
		CU_cleanup_registry();
		return CU_get_error();
	}
	
	//if (NULL == CU_add_test(pSuite, "test_next_id", test_next_id) ||
/*	if(NULL == CU_add_test(pSuite, "test_start_new_cycle_postion", test_start_new_cycle_postion) ||
		NULL == CU_add_test(pSuite, "test_g0", test_g0) ||
		NULL == CU_add_test(pSuite, "test_nong0", test_nong0) ||
		NULL == CU_add_test(pSuite, "test_differentiate_stem_z", test_differentiate_stem_z) ||
		NULL == CU_add_test(pSuite, "test_migrate", test_migrate))
	{
		CU_cleanup_registry();
		return CU_get_error();
	}*/
	
	/* Run all tests using the CUnit Basic interface */
	CU_basic_set_mode(CU_BRM_VERBOSE);
	CU_basic_run_tests();
	CU_cleanup_registry();
	
	return CU_get_error();
}
